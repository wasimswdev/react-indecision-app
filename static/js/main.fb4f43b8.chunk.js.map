{"version":3,"sources":["components/Header.js","components/Action.js","components/Option.js","components/Options.js","components/AddOption.js","components/OptionModal.js","index.js"],"names":["Header","props","className","title","subtitle","defaultProps","Action","onClick","handlePick","disabled","hasOptions","Option","count","optionText","e","handleDeleteOption","Options","handleDeleteOptions","options","length","map","option","index","AddOption","handleAdd","bind","state","error","undefined","preventDefault","newTask","target","elements","addoption","value","trim","this","handleAddOption","setState","onSubmit","type","name","placeholder","React","Component","OptionModal","isOpen","selectedOption","onRequestClose","handleCloseModal","contentLabel","closeTimeoutMS","Indecision","json","localStorage","getItem","JSON","parse","prevProps","prevState","stringify","setItem","optiontoDelete","filter","randomNum","Math","floor","random","indexOf","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fb4f43b8.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Header(props){\r\n    return(\r\n        <div className=\"header\">\r\n        <div className=\"container\">\r\n          <h1 className=\"header__title\">{props.title}</h1>\r\n          {props.subtitle && <h2 className=\"header__subtitle\">{props.subtitle}</h2>}\r\n        </div>\r\n        </div>\r\n      )\r\n  }\r\n  \r\n  Header.defaultProps = {\r\n    title: 'Indecision'\r\n  }\r\n\r\n  export default Header","import React from 'react'\r\n\r\nfunction Action(props){\r\n    return(\r\n      <div className=\"action\">\r\n        <button\r\n         className=\"big-button\"\r\n         onClick={props.handlePick} \r\n         disabled={!props.hasOptions}>What should i do?\r\n        </button>\r\n      </div>\r\n    )\r\n  }\r\n\r\nexport default Action","import React from 'react'\r\n\r\n\r\nfunction Option(props){\r\n    return(\r\n      <div className=\"option\">\r\n       <p className=\"option__text\">{props.count}. {props.optionText} </p> \r\n       <button \r\n       className=\"button button--link\"\r\n       onClick={(e)=> {props.handleDeleteOption(props.optionText)}}\r\n       >\r\n       remove\r\n       </button>\r\n      </div>\r\n    )\r\n  }\r\n\r\nexport default Option","import React from 'react'\r\nimport Option from './Option'\r\n\r\nfunction Options(props){\r\n    return(\r\n      <div>\r\n      <div className=\"widget-header\">\r\n        <h3 className=\"widget-header__title\">Your Options</h3>\r\n        <button \r\n        className=\"button button--link\"\r\n        onClick={props.handleDeleteOptions}\r\n        >\r\n        Remove all\r\n        </button>\r\n      </div>\r\n      \r\n      {props.options.length === 0 && <p className=\"widget__message\">Please add item to get started</p>}\r\n      {props.options.map((option, index) => \r\n        <Option \r\n        key={option} \r\n        optionText={option} \r\n        count={index+1}\r\n        handleDeleteOption={props.handleDeleteOption}\r\n        />\r\n      )}\r\n      </div>\r\n    )\r\n  }\r\n\r\nexport default Options","import React from 'react'\r\n\r\nclass AddOption extends React.Component{\r\n    constructor(props){\r\n      super(props)\r\n      this.handleAdd = this.handleAdd.bind(this)\r\n      this.state = {\r\n        error: undefined\r\n      }\r\n    }\r\n  \r\n    handleAdd(e){\r\n      e.preventDefault()\r\n      const newTask = e.target.elements.addoption.value.trim()\r\n      const error = this.props.handleAddOption(newTask)\r\n      \r\n      this.setState(() => ( {error} ))\r\n  \r\n      if(!error){\r\n        e.target.elements.addoption.value = ''\r\n      }\r\n    }\r\n  \r\n    render(){\r\n      return(\r\n        <div>\r\n        {this.state.error && <p className=\"add-option-error\">{this.state.error}</p>}\r\n          <form className=\"add-option\" onSubmit={this.handleAdd}>\r\n            <input className=\"add-option__input\" type='text' name='addoption' placeholder='Add Task' />\r\n            <button className=\"button\">Add Option</button>\r\n          </form>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  \r\nexport default AddOption","import React from 'react'\r\nimport Modal from 'react-modal'\r\n\r\n\r\nfunction OptionModal(props){\r\n    return (\r\n        <Modal\r\n         isOpen={!!props.selectedOption}\r\n         onRequestClose={props.handleCloseModal}\r\n         contentLabel={\"Selected option\"}\r\n         closeTimeoutMS={200}\r\n         >\r\n         <h3>Selected Option</h3>\r\n         {props.selectedOption && <p>{props.selectedOption}</p>}\r\n         <button onClick={props.handleCloseModal}>Okay</button>\r\n        </Modal>\r\n    )\r\n    \r\n}\r\n\r\nexport default OptionModal","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Header from './components/Header';\nimport Action from './components/Action';\nimport Options from './components/Options';\nimport AddOption from './components/AddOption';\nimport OptionModal from './components/OptionModal';\nimport 'normalize.css/normalize.css';\nimport './styles/styles.scss';\n\nclass Indecision extends React.Component{\n  constructor(props){\n    super(props)\n    this.handleAddOption = this.handleAddOption.bind(this)\n    this.handlePick = this.handlePick.bind(this)\n    this.handleDeleteOptions = this.handleDeleteOptions.bind(this)\n    this.handleDeleteOption = this.handleDeleteOption.bind(this)\n    this.handleCloseModal = this.handleCloseModal.bind(this)\n    this.state = {\n      options : props.options,\n      selectedOption : undefined\n    }\n  }\n\n  componentDidMount(){\n    try{\n      const json = localStorage.getItem('options')\n      const options = JSON.parse(json)\n      if(options){\n        this.setState(() => ({ options }))\n    }\n    }catch(e){\n      //do nothing\n    }\n  }\n\n  \n  componentDidUpdate(prevProps, prevState){\n    if(prevState.options.length !== this.state.options){\n      const json = JSON.stringify(this.state.options)\n      localStorage.setItem('options', json)\n    }\n    \n  }\n  componentWillUnmount(){\n\n  }\n\n  handleCloseModal(){\n    this.setState(() => ({\n      selectedOption : false\n    }))\n  }\n  handleDeleteOptions(){\n    this.setState(() => ({ options : [] }))   \n  }\n\n  handleDeleteOption(optiontoDelete){\n    this.setState((prevState) => ({ \n      options : prevState.options.filter(option => option !== optiontoDelete)\n    }))\n    }\n  \n\n  handlePick(){\n    const randomNum = Math.floor(Math.random()*this.state.options.length)\n    const option = this.state.options[randomNum]\n    this.setState(() => ({\n      selectedOption : option\n    }))\n  }\n\n  handleAddOption(newTask){\n\n    if(!newTask){\n      return 'Enter valid value of the task'\n    }else if(this.state.options.indexOf(newTask) > -1){\n      return 'This option already exist'\n    }\n    this.setState((prevState) =>({ options : prevState.options.concat([newTask]) }))\n  }\n\n  render(){\n    const title = 'Indecision'\n    const subtitle = 'Put your life in the hands of a computer'\n  \n    return(\n      <div>\n      <Header title={title} subtitle={subtitle}/>\n      <div className=\"container\">\n        <Action hasOptions={this.state.options.length > 0} handlePick={this.handlePick}/>\n        <div className=\"widget\">\n          <Options \n          options={this.state.options} \n          handleDeleteOptions={this.handleDeleteOptions} \n          handleDeleteOption={this.handleDeleteOption}\n          />\n          <AddOption handleAddOption={this.handleAddOption}/>\n          </div>  \n      </div>\n      <OptionModal selectedOption={this.state.selectedOption}  handleCloseModal={this.handleCloseModal} />\n      </div>\n    )\n  }\n}\n\nIndecision.defaultProps = {\n  options : []\n}\n\nReactDOM.render(<Indecision  />, document.getElementById('root'))"],"sourceRoot":""}